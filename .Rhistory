ggsave(paste0('SMEs_',task,'.png'),
arrangeGrob(cbind(table_row_name,lg,rg, size = "last")),
height = 8, width = 6, dpi = 400)
conditions = c("full","odds","x99","x90")
#trials_all = c("all", "rare_frequent")
#cond_labs = c("Full","Half","99% Var.","90% Var.")
thresh = 1000
p = list()
i = 1
for (j in comp_all){
ii = 1
for (jj in conditions) {
dv1 = paste(jj,j,trials_all[i],'mean_amp','odds',sep = '_')
dv2 = paste(jj,j,trials_all[i],'mean_amp','evens',sep = '_')
new_df = main_df[abs(scale(main_df[[dv1]]))<3 & abs(scale(main_df[[dv2]]))<3, ]
x = new_df[[dv1]]
y = new_df[[dv2]]
x_label = c("Odd Trials (z-score)" )
y_label = c("Even Trials (z-score)"  )
#browser()
p[[(i-1)*4 + ii]] = vjpscatter(x = x, y = y, x_label = x_label ,
y_label = y_label, SB = TRUE)
ii = ii+1
}
i = i + 1
}
conditions = c("full","odds","x99","x90")
#trials_all = c("all", "rare_frequent")
#cond_labs = c("Full","Half","99% Var.","90% Var.")
thresh = 1000
p = list()
i = 1
for (j in comp_all){
ii = 1
for (jj in conditions) {
dv1 = paste(jj,j,trials_all[i],'mean_amp','odds',sep = '_')
dv2 = paste(jj,j,trials_all[i],'mean_amp','evens',sep = '_')
new_df = as.data.frame[main_df[abs(scale(main_df[[dv1]]))<3 & abs(scale(main_df[[dv2]]))<3, ]]
x = new_df[[dv1]]
y = new_df[[dv2]]
x_label = c("Odd Trials (z-score)" )
y_label = c("Even Trials (z-score)"  )
#browser()
p[[(i-1)*4 + ii]] = vjpscatter(x = x, y = y, x_label = x_label ,
y_label = y_label, SB = TRUE)
ii = ii+1
}
i = i + 1
}
new_df = as.data.frame[main_df[abs(scale(main_df[[dv1]]))<3 & abs(scale(main_df[[dv2]]))<3, ]]
dv1 = paste(jj,j,trials_all[i],'mean_amp','odds',sep = '_')
dv2 = paste(jj,j,trials_all[i],'mean_amp','evens',sep = '_')
new_df = as.data.frame[main_df[abs(scale(main_df[[dv1]]))<3 & abs(scale(main_df[[dv2]]))<3, ]]
test_df = as.data.frame[main_df[abs(scale(main_df[[dv1]]))<3 & abs(scale(main_df[[dv2]]))<3, ]]
abs(scale(main_df[[dv1]]))<3
main_df[abs(scale(main_df[[dv1]]))<3 & abs(scale(main_df[[dv2]]))<3, ]]
conditions = c("full","odds","x99","x90")
#trials_all = c("all", "rare_frequent")
#cond_labs = c("Full","Half","99% Var.","90% Var.")
thresh = 1000
p = list()
i = 1
for (j in comp_all){
ii = 1
for (jj in conditions) {
dv1 = paste(jj,j,trials_all[i],'mean_amp','odds',sep = '_')
dv2 = paste(jj,j,trials_all[i],'mean_amp','evens',sep = '_')
new_df = as.data.frame(main_df[abs(scale(main_df[[dv1]]))<3 & abs(scale(main_df[[dv2]]))<3, ]])
conditions = c("full","odds","x99","x90")
#trials_all = c("all", "rare_frequent")
#cond_labs = c("Full","Half","99% Var.","90% Var.")
thresh = 1000
p = list()
i = 1
for (j in comp_all){
ii = 1
for (jj in conditions) {
dv1 = paste(jj,j,trials_all[i],'mean_amp','odds',sep = '_')
dv2 = paste(jj,j,trials_all[i],'mean_amp','evens',sep = '_')
new_df = as.data.frame(main_df[abs(scale(main_df[[dv1]]))<3 & abs(scale(main_df[[dv2]]))<3, ])
x = new_df[[dv1]]
y = new_df[[dv2]]
x_label = c("Odd Trials (z-score)" )
y_label = c("Even Trials (z-score)"  )
#browser()
p[[(i-1)*4 + ii]] = vjpscatter(x = x, y = y, x_label = x_label ,
y_label = y_label, SB = TRUE)
ii = ii+1
}
i = i + 1
}
main_df[abs(scale(main_df[[dv1]]))<3 & abs(scale(main_df[[dv2]]))<3, ]
as.data.frame(main_df[abs(scale(main_df[[dv1]]))<3 & abs(scale(main_df[[dv2]]))<3 ])
conditions = c("full","odds","x99","x90")
#trials_all = c("all", "rare_frequent")
#cond_labs = c("Full","Half","99% Var.","90% Var.")
thresh = 1000
p = list()
i = 1
for (j in comp_all){
ii = 1
for (jj in conditions) {
dv1 = paste(jj,j,trials_all[i],'mean_amp','odds',sep = '_')
dv2 = paste(jj,j,trials_all[i],'mean_amp','evens',sep = '_')
main_df = as.data.frame(main_df)
new_df = main_df[abs(scale(main_df[[dv1]]))<3 & abs(scale(main_df[[dv2]]))<3, ]
x = new_df[[dv1]]
y = new_df[[dv2]]
x_label = c("Odd Trials (z-score)" )
y_label = c("Even Trials (z-score)"  )
#browser()
p[[(i-1)*4 + ii]] = vjpscatter(x = x, y = y, x_label = x_label ,
y_label = y_label, SB = TRUE)
ii = ii+1
}
i = i + 1
}
#just reordering so that when grid.arrange is called the plots are in the correct order
ordered_p = p[c(1,5,2,6,3,7,4,8)]
tt = ttheme_minimal()
tt$core$fg_params <- list(fontface=matrix(c(2),
ncol=1,nrow=4,byrow=TRUE))
table_row_name <- tableGrob(c("Full Dimensionality", "Half Dimensionality", "99% Variance", "90% Variance"),  theme= tt)
lg = grid.arrange(
arrangeGrob(ordered_p[[1]],
top= textGrob("P1",hjust = -.4,
gp=gpar(fontsize = 14, fontface = "bold"))),
ordered_p[[3]],
ordered_p[[5]],
ordered_p[[7]], nrow = 4)
rg = grid.arrange(
arrangeGrob(ordered_p[[2]],
top= textGrob("N2 Diff.",hjust = .15,
gp=gpar(fontsize = 14,fontface = "bold"))),
ordered_p[[4]],
ordered_p[[6]],
ordered_p[[8]], nrow = 4)
ggsave(paste0('Reliabilities_',task,'.png'),
arrangeGrob(cbind(table_row_name,
lg,
rg,
size = "last")),
height = 8, width = 8, dpi = 400)
conditions = c("full","odds","x99","x90")
#trials_all = c("all", "rare_frequent")
#cond_labs = c("Full","Half","99% Var.","90% Var.")
outlier_sd_thresh = 1000
p = list()
i = 1
for (j in comp_all){
ii = 1
for (jj in conditions) {
dv1 = paste(jj,j,trials_all[i],'mean_amp','odds',sep = '_')
dv2 = paste(jj,j,trials_all[i],'mean_amp','evens',sep = '_')
main_df = as.data.frame(main_df)
new_df = main_df[abs(scale(main_df[[dv1]]))<1000 & abs(scale(main_df[[dv2]]))<1000, ]
x = new_df[[dv1]]
y = new_df[[dv2]]
x_label = c("Odd Trials (z-score)" )
y_label = c("Even Trials (z-score)"  )
#browser()
p[[(i-1)*4 + ii]] = vjpscatter(x = x, y = y, x_label = x_label ,
y_label = y_label, SB = TRUE)
ii = ii+1
}
i = i + 1
}
#just reordering so that when grid.arrange is called the plots are in the correct order
ordered_p = p[c(1,5,2,6,3,7,4,8)]
tt = ttheme_minimal()
tt$core$fg_params <- list(fontface=matrix(c(2),
ncol=1,nrow=4,byrow=TRUE))
table_row_name <- tableGrob(c("Full Dimensionality", "Half Dimensionality", "99% Variance", "90% Variance"),  theme= tt)
lg = grid.arrange(
arrangeGrob(ordered_p[[1]],
top= textGrob("P1",hjust = -.4,
gp=gpar(fontsize = 14, fontface = "bold"))),
ordered_p[[3]],
ordered_p[[5]],
ordered_p[[7]], nrow = 4)
rg = grid.arrange(
arrangeGrob(ordered_p[[2]],
top= textGrob("N2 Diff.",hjust = .15,
gp=gpar(fontsize = 14,fontface = "bold"))),
ordered_p[[4]],
ordered_p[[6]],
ordered_p[[8]], nrow = 4)
ggsave(paste0('Reliabilities_',task,'.png'),
arrangeGrob(cbind(table_row_name,
lg,
rg,
size = "last")),
height = 8, width = 8, dpi = 400)
conditions = c("full","odds","x99","x90")
#trials_all = c("all", "rare_frequent")
#cond_labs = c("Full","Half","99% Var.","90% Var.")
outlier_sd_thresh = 5
p = list()
i = 1
for (j in comp_all){
ii = 1
for (jj in conditions) {
dv1 = paste(jj,j,trials_all[i],'mean_amp','odds',sep = '_')
dv2 = paste(jj,j,trials_all[i],'mean_amp','evens',sep = '_')
main_df = as.data.frame(main_df)
new_df = main_df[abs(scale(main_df[[dv1]]))<1000 & abs(scale(main_df[[dv2]]))<1000, ]
x = new_df[[dv1]]
y = new_df[[dv2]]
x_label = c("Odd Trials (z-score)" )
y_label = c("Even Trials (z-score)"  )
#browser()
p[[(i-1)*4 + ii]] = vjpscatter(x = x, y = y, x_label = x_label ,
y_label = y_label, SB = TRUE)
ii = ii+1
}
i = i + 1
}
#just reordering so that when grid.arrange is called the plots are in the correct order
ordered_p = p[c(1,5,2,6,3,7,4,8)]
tt = ttheme_minimal()
tt$core$fg_params <- list(fontface=matrix(c(2),
ncol=1,nrow=4,byrow=TRUE))
table_row_name <- tableGrob(c("Full Dimensionality", "Half Dimensionality", "99% Variance", "90% Variance"),  theme= tt)
lg = grid.arrange(
arrangeGrob(ordered_p[[1]],
top= textGrob("P1",hjust = -.4,
gp=gpar(fontsize = 14, fontface = "bold"))),
ordered_p[[3]],
ordered_p[[5]],
ordered_p[[7]], nrow = 4)
rg = grid.arrange(
arrangeGrob(ordered_p[[2]],
top= textGrob("N2 Diff.",hjust = .15,
gp=gpar(fontsize = 14,fontface = "bold"))),
ordered_p[[4]],
ordered_p[[6]],
ordered_p[[8]], nrow = 4)
ggsave(paste0('Reliabilities_',task,'.png'),
arrangeGrob(cbind(table_row_name,
lg,
rg,
size = "last")),
height = 8, width = 8, dpi = 400)
conditions = c("full","odds","x99","x90")
#trials_all = c("all", "rare_frequent")
#cond_labs = c("Full","Half","99% Var.","90% Var.")
outlier_sd_thresh = 3
p = list()
i = 1
for (j in comp_all){
ii = 1
for (jj in conditions) {
dv1 = paste(jj,j,trials_all[i],'mean_amp','odds',sep = '_')
dv2 = paste(jj,j,trials_all[i],'mean_amp','evens',sep = '_')
main_df = as.data.frame(main_df)
new_df = main_df[abs(scale(main_df[[dv1]]))<1000 & abs(scale(main_df[[dv2]]))<1000, ]
x = new_df[[dv1]]
y = new_df[[dv2]]
x_label = c("Odd Trials (z-score)" )
y_label = c("Even Trials (z-score)"  )
#browser()
p[[(i-1)*4 + ii]] = vjpscatter(x = x, y = y, x_label = x_label ,
y_label = y_label, SB = TRUE)
ii = ii+1
}
i = i + 1
}
#just reordering so that when grid.arrange is called the plots are in the correct order
ordered_p = p[c(1,5,2,6,3,7,4,8)]
tt = ttheme_minimal()
tt$core$fg_params <- list(fontface=matrix(c(2),
ncol=1,nrow=4,byrow=TRUE))
table_row_name <- tableGrob(c("Full Dimensionality", "Half Dimensionality", "99% Variance", "90% Variance"),  theme= tt)
lg = grid.arrange(
arrangeGrob(ordered_p[[1]],
top= textGrob("P1",hjust = -.4,
gp=gpar(fontsize = 14, fontface = "bold"))),
ordered_p[[3]],
ordered_p[[5]],
ordered_p[[7]], nrow = 4)
rg = grid.arrange(
arrangeGrob(ordered_p[[2]],
top= textGrob("N2 Diff.",hjust = .15,
gp=gpar(fontsize = 14,fontface = "bold"))),
ordered_p[[4]],
ordered_p[[6]],
ordered_p[[8]], nrow = 4)
ggsave(paste0('Reliabilities_',task,'.png'),
arrangeGrob(cbind(table_row_name,
lg,
rg,
size = "last")),
height = 8, width = 8, dpi = 400)
is.numeric(outlier_sd_thresh)
source("~/Desktop/vjpackage/R/my_new_package.R")
outlier_sd_thresh = NULL
is.numeric(outlier_sd_thresh)
source("~/Desktop/vjpackage/R/my_new_package.R")
library(ggplot2)
library(data.table)
library(tidyr)
library(see)
library(ggpp)
library(gridExtra)
library(grid)
task = 'DSCPT'
#load in data
main_df<-fread(paste0('/Users/pokor076/My Drive/Psychophysiology - ICA/Full Manuscript/R_scripts/csvs/', task, '_table4R.csv'))
main_df$`% var mixed 90`<-as.numeric(main_df$`%var mixed 90`)
#set outlier threshold for all analyses here
outlier_sd_thresh  = NULL
#three one-tailed dependent samples t-tests will be computed to compare: 1) full #dimensionality ICA (fdICA) vs. 64 electrode ICA, 2.) fdICA vs. 99% variance PCA #before ICA and 3.) fdICA vs. 90% variance PCA before ICA.
# mean amplitidue comparisons
dv = "mean_amp"
dv_label = "Mean Amp."
comp_all = c("P1","N2")
cond1 = "full"
cond2_all = c("odds","x99","x90")
cond1_lab = c("Full")
trials_all = c("all", "rare_frequent")
cond2_lab = c("Half", "99% Var.","90% Var.")
hypothesis_dirs = c("g","g") # we expect full P1 to be more positive and  N2 to be more positive
y_labs = 'Mean Amplitude (μV)'
p = list()
i = 1
for (j in comp_all){
comp = j
trials = trials_all[i]
hypothesis_dir = hypothesis_dirs[i]
y_lab = y_labs
ii = 1
for (jj in cond2_all){
cond2  = jj
cond_labs = c(cond1_lab, cond2_lab[ii])
plot_title = paste0(comp,"_",cond1,"_vs_", cond2)
p[[(i-1)*3 + ii]] <- vjplot_paired_ttest(x = paste0(cond1,"_", comp, "_", trials, "_", dv),
y = paste0(cond2,"_", comp, "_", trials, "_", dv), sub_col_name = "subIDs", x_lab = "Condition", y_lab = y_lab, cond_labs = cond_labs, plot_title = plot_title, main_data = main_df, alternative = hypothesis_dir, save_out = FALSE, font_mltplyr = 1, outlier_sd_thresh = outlier_sd_thresh)
ii = ii +1
}
i = i +1
}
ordered_p = p[c(1,4,2,5,3,6)]
tt = ttheme_minimal()
tt$core$fg_params <- list(fontface=matrix(c(2),
ncol=1,nrow=3,byrow=TRUE))
table_row_name <- tableGrob(c("Full Vs. Half", "Full Vs. 99%", "Full vs. 90%"),  theme= tt)
lg = grid.arrange(
arrangeGrob(ordered_p[[1]], top= textGrob(comp_all[1],hjust = -.4,
gp=gpar(fontsize = 14, fontface = "bold"))),
ordered_p[[3]],
ordered_p[[5]])
rg = grid.arrange(
arrangeGrob(ordered_p[[2]], top= textGrob(paste0(comp_all[2]," Diff."),hjust = .15,
gp=gpar(fontsize = 14,fontface = "bold"))),
ordered_p[[4]],
ordered_p[[6]])
ggsave(paste0('MeanAmps_',task,'.png'),arrangeGrob(cbind(table_row_name,lg,rg, size = "last")), height = 8, width = 6, dpi = 400)
# SME comparisons
dv = "SME"
trials_all = c("all", "rare_frequent")
cond_labs = c("Full","Half", "99% Var.","90% Var.")
hypothesis_dirs = c("l","l") # we expect SME to be less for full condition for both components
p = list()
i = 1
for (j in comp_all){
comp = j
trials = trials_all[i]
hypothesis_dir = hypothesis_dirs[i]
ii = 1
for (jj in cond2_all){
cond2  = jj
cond_labs = c(cond1_lab, cond2_lab[ii])
plot_title = paste0(comp,"_",cond1,"_vs_", cond2)
p[[(i-1)*3 + ii]] <- vjplot_paired_ttest(x = paste0(cond1,"_", comp, "_", trials, "_", dv),
y = paste0(cond2,"_", comp, "_", trials, "_", dv), sub_col_name = "subIDs", x_lab = "Condition", y_lab = dv, cond_labs = cond_labs, plot_title = plot_title, main_data = main_df, alternative = hypothesis_dir, save_out = FALSE, outlier_sd_thresh = outlier_sd_thresh)
ii = ii +1
}
i = i +1
}
ordered_p = p[c(1,4,2,5,3,6)]
tt = ttheme_minimal()
tt$core$fg_params <- list(fontface=matrix(c(2),
ncol=1,nrow=3,byrow=TRUE))
table_row_name <- tableGrob(c("Full Vs. Half", "Full Vs. 99%", "Full vs. 90%"),  theme= tt)
lg = grid.arrange(
arrangeGrob(ordered_p[[1]], top= textGrob("P1",hjust = -.4,
gp=gpar(fontsize = 14, fontface = "bold"))),
ordered_p[[3]],
ordered_p[[5]])
rg = grid.arrange(
arrangeGrob(ordered_p[[2]], top= textGrob("N2 Diff.",hjust = .15,
gp=gpar(fontsize = 14,
fontface = "bold"))),
ordered_p[[4]],
ordered_p[[6]])
ggsave(paste0('SMEs_',task,'.png'),
arrangeGrob(cbind(table_row_name,lg,rg, size = "last")),
height = 8, width = 6, dpi = 400)
conditions = c("full","odds","x99","x90")
#trials_all = c("all", "rare_frequent")
#cond_labs = c("Full","Half","99% Var.","90% Var.")
p = list()
i = 1
for (j in comp_all){
ii = 1
for (jj in conditions) {
dv1 = paste(jj,j,trials_all[i],'mean_amp','odds',sep = '_')
dv2 = paste(jj,j,trials_all[i],'mean_amp','evens',sep = '_')
#outlier logic
if (is.numeric(outlier_sd_thresh)) {
main_df = as.data.frame(main_df)
new_df = main_df[abs(scale(main_df[[dv1]]))<outlier_sd_thresh &
abs(scale(main_df[[dv2]]))<outlier_sd_thresh, ]
x = new_df[[dv1]]
y = new_df[[dv2]]
} else {
x = main_df[[dv1]]
y = main_df[[dv2]]
}
x_label = c("Odd Trials (z-score)" )
y_label = c("Even Trials (z-score)"  )
#browser()
p[[(i-1)*4 + ii]] = vjpscatter(x = x, y = y, x_label = x_label ,
y_label = y_label, SB = TRUE)
ii = ii+1
}
i = i + 1
}
#just reordering so that when grid.arrange is called the plots are in the correct order
ordered_p = p[c(1,5,2,6,3,7,4,8)]
tt = ttheme_minimal()
tt$core$fg_params <- list(fontface=matrix(c(2),
ncol=1,nrow=4,byrow=TRUE))
table_row_name <- tableGrob(c("Full Dimensionality", "Half Dimensionality", "99% Variance", "90% Variance"),  theme= tt)
lg = grid.arrange(
arrangeGrob(ordered_p[[1]],
top= textGrob("P1",hjust = -.4,
gp=gpar(fontsize = 14, fontface = "bold"))),
ordered_p[[3]],
ordered_p[[5]],
ordered_p[[7]], nrow = 4)
rg = grid.arrange(
arrangeGrob(ordered_p[[2]],
top= textGrob("N2 Diff.",hjust = .15,
gp=gpar(fontsize = 14,fontface = "bold"))),
ordered_p[[4]],
ordered_p[[6]],
ordered_p[[8]], nrow = 4)
ggsave(paste0('Reliabilities_',task,'.png'),
arrangeGrob(cbind(table_row_name,
lg,
rg,
size = "last")),
height = 8, width = 8, dpi = 400)
#t-test to compare perc. var.  of mixed ICs between conditions
# only need one column because component doesn't matter
# need to convert some columns to numerics and also change a naming error
main_df$`% var mixed 99`<-as.numeric(main_df$`% var mixed 99`)
cond2_all = c("odds","99","90")
# SME comparisons
dv = "% var mixed"
cond_labs = c("Full","Half", "99% Var.","90% Var.")
hypothesis_dir = "g" # we expect SME to be less for full condition for both components
p = list()
i = 1
for (j in cond2_all){
cond2  = j
cond_labs = c(cond1_lab, cond2_lab[i])
plot_title = paste0(comp,"_",cond1,"_vs_", cond2)
p[[i]] <- vjplot_paired_ttest(x = paste0(dv,' ',cond1),
y = paste0(dv,' ',cond2), sub_col_name = "subIDs", x_lab = "Condition", y_lab = dv, cond_labs = cond_labs, plot_title = plot_title, main_data = main_df, alternative = hypothesis_dir, save_out = FALSE)
i = i+1
}
tt = ttheme_minimal()
tt$core$fg_params <- list(fontface=matrix(c(2),
ncol=1,nrow=3,byrow=TRUE)) # this makes row labels bold (2=bold)
table_row_name <- tableGrob(c("Full Vs. Half", "Full Vs. 99%", "Full vs. 90%"),  theme= tt)
lg = grid.arrange(p[[1]],
p[[2]],
p[[3]], ncol = 1, nrow = 3)
ggsave(paste0('perc_var_',task,'.png'),
arrangeGrob(cbind(table_row_name,lg,size = "last")),
height = 8, width = 6, dpi = 400)
#mediation
library(mediation)
sims = 10000
mediation_res = NULL
#P1 full vs. 90 mean amp
res<-mediate_bin_IV(Y0 = "full_P1_all_mean_amp",
Y1 = "x90_P1_all_mean_amp",
M0 = "% var mixed full",
M1 = "% var mixed 90",
wide_df = main_df,
sims = sims)
mediation_res<-cbind("P1 full vs. 90 mean amp",pub_ready_stats(res))
#N1 full vs. half SME
res<-mediate_bin_IV(Y0 = "full_P1_all_SME",
Y1 = "odds_P1_all_SME",
M0 = "% var mixed full",
M1 = "% var mixed odds",
wide_df = main_df,
sims = sims)
mediation_res<-rbind(mediation_res,cbind("P1 full vs. half SME",pub_ready_stats(res)))
#P3 diff. full vs. half
res<-mediate_bin_IV(Y0 = "full_N2_rare_frequent_SME",
Y1 = "odds_N2_rare_frequent_SME",
M0 = "% var mixed full",
M1 = "% var mixed odds",
wide_df = main_df,
sims = sims)
mediation_res<-rbind(mediation_res,cbind("N2 full vs. half SME",pub_ready_stats(res)))
mediation_res
